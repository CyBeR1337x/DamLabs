--1
CREATE TRIGGER STU_CHECK ON Student AFTER INSERT
AS
BEGIN
	DECLARE @REGNO VARCHAR(25) = (SELECT TOP 1 REGNO FROM inserted)
	IF (SELECT 1 FROM inserted WHERE AGE < 18 OR AGE > 25) = 1 OR 
		(SELECT 1 FROM inserted WHERE sCGPA < 0 OR sCGPA > 4) = 1
	BEGIN
			DELETE FROM Student WHERE regno = @REGNO
			PRINT 'STUDENT DELETED'
	END
END

INSERT INTO Student VALUES('21-ARID-600', 'TEST', 'TEST', 4.5, 16, 40)

--2
CREATE TRIGGER UPDATE_CHECK_GRADE ON ENROLLMENT INSTEAD OF UPDATE
AS 
BEGIN 
	IF (SELECT COUNT(*) FROM inserted I INNER JOIN deleted d ON I.grade != D.grade) > 0
		PRINT 'NOT ALLOWED TO UPDATE GRADE!'		
END

UPDATE Enrollment SET grade = 'B' WHERE regno = '21-ARID-4421'


--3:
CREATE TRIGGER ENROLLMENT_BACK ON ENROLLMENT AFTER INSERT
AS 
BEGIN 
	INSERT INTO Enrollment_Backup
	SELECT * FROM Enrollment
	WHERE grade = 'f'
END

INSERT INTO Enrollment VALUES('21-ARID-4460',  'CSC-303', 6, 'F')
SELECT * FROM Enrollment_Backup

--4
CREATE TRIGGER STU_BACKUP ON STUDENT AFTER DELETE AS
BEGIN
	INSERT INTO STUDENT_BACKUP
	SELECT * FROM deleted
END

DELETE FROM Student WHERE regno = '21-ARID-5000'

--5

CREATE TRIGGER INSERT_COURSE ON COURSE
INSTEAD OF INSERT
AS
BEGIN
	DECLARE @CRS_ID VARCHAR(10) = (SELECT TOP 1 CCODE FROM inserted)
	IF (SELECT COUNT(*) FROM Course WHERE cCode = @CRS_ID) > 1
		PRINT 'PRIMARY KEY VIOLATION'
	ELSE 
		INSERT INTO Course 
		SELECT * FROM inserted
END
DROP TRIGGER INSERT_COURSE
SELECT * FROM Course
INSERT INTO Course VALUES('CSC-600', 'TEST', 5)